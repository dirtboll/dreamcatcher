[gd_resource type="VisualShader" load_steps=11 format=2]

[sub_resource type="VisualShaderNodeVectorDecompose" id=1]

[sub_resource type="VisualShaderNodeScalarOp" id=2]
operator = 3

[sub_resource type="VisualShaderNodeVectorCompose" id=3]

[sub_resource type="VisualShaderNodeVec3Uniform" id=4]
uniform_name = "VectorUniform"

[sub_resource type="VisualShaderNodeVectorDecompose" id=5]

[sub_resource type="VisualShaderNodeInput" id=6]
input_name = "texture"

[sub_resource type="VisualShaderNodeTexture" id=7]
source = 5

[sub_resource type="VisualShaderNodeInput" id=8]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorFunc" id=9]
function = 4

[sub_resource type="VisualShaderNodeVectorFunc" id=10]
function = 5

[resource]
code = "shader_type canvas_item;
uniform vec3 VectorUniform;



void vertex() {
// Output:0

}

void fragment() {
// Input:4
	vec3 n_out4p0 = vec3(UV, 0.0);

// Input:2

// Texture:3
	vec3 n_out3p0;
	float n_out3p1;
	{
		vec4 TEXTURE_tex_read = texture(TEXTURE, n_out4p0.xy);
		n_out3p0 = TEXTURE_tex_read.rgb;
		n_out3p1 = TEXTURE_tex_read.a;
	}

// VectorFunc:6
	vec3 n_out6p0;
	{
		vec3 c = n_out3p0;
		vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);
		vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));
		vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));
		float d = q.x - min(q.w, q.y);
		float e = 1.0e-10;
		n_out6p0 = vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);
	}

// VectorDecompose:10
	float n_out10p0 = n_out6p0.x;
	float n_out10p1 = n_out6p0.y;
	float n_out10p2 = n_out6p0.z;

// VectorUniform:16
	vec3 n_out16p0 = VectorUniform;

// VectorDecompose:17
	float n_out17p0 = n_out16p0.x;
	float n_out17p1 = n_out16p0.y;
	float n_out17p2 = n_out16p0.z;

// ScalarOp:14
	float n_out14p0 = n_out10p1 / n_out17p1;

// VectorCompose:15
	vec3 n_out15p0 = vec3(n_out10p0, n_out14p0, n_out10p2);

// VectorFunc:7
	vec3 n_out7p0;
	{
		vec3 c = n_out15p0;
		vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);
		vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);
		n_out7p0 = c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);
	}

// Output:0
	COLOR.rgb = n_out7p0;
	COLOR.a = n_out3p1;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -133, 63 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 1480, 200 )
nodes/fragment/2/node = SubResource( 6 )
nodes/fragment/2/position = Vector2( -20, 260 )
nodes/fragment/3/node = SubResource( 7 )
nodes/fragment/3/position = Vector2( 140, 180 )
nodes/fragment/4/node = SubResource( 8 )
nodes/fragment/4/position = Vector2( -20, 180 )
nodes/fragment/6/node = SubResource( 9 )
nodes/fragment/6/position = Vector2( 340, 180 )
nodes/fragment/7/node = SubResource( 10 )
nodes/fragment/7/position = Vector2( 1240, 180 )
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( 540, 120 )
nodes/fragment/14/node = SubResource( 2 )
nodes/fragment/14/position = Vector2( 800, 280 )
nodes/fragment/15/node = SubResource( 3 )
nodes/fragment/15/position = Vector2( 1020, 120 )
nodes/fragment/16/node = SubResource( 4 )
nodes/fragment/16/position = Vector2( 340, 400 )
nodes/fragment/17/node = SubResource( 5 )
nodes/fragment/17/position = Vector2( 540, 360 )
nodes/fragment/connections = PoolIntArray( 4, 0, 3, 0, 2, 0, 3, 2, 3, 1, 0, 1, 3, 0, 6, 0, 7, 0, 0, 0, 6, 0, 10, 0, 15, 0, 7, 0, 10, 0, 15, 0, 10, 2, 15, 2, 10, 1, 14, 0, 14, 0, 15, 1, 17, 1, 14, 1, 16, 0, 17, 0 )
